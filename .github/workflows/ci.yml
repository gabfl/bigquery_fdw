name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install PostgreSQL manually
        run: |
          sudo apt-get remove --purge postgresql*
          echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" | sudo tee -a /etc/apt/sources.list.d/pgdg.list
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | \
          sudo apt-key add -
          sudo apt-get update
          sudo apt-get -y install postgresql-11 postgresql-server-dev-11
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --yes python3-setuptools python${{ matrix.python-version }}-dev make gcc
      - name: Clone and compile Multicorn
        run: |
          git clone git://github.com/gabfl/Multicorn.git /opt/Multicorn
          cd /opt/Multicorn
          sudo mkdir -p /usr/share/doc/postgresql-doc-11 /usr/lib/postgresql/11/lib/bitcode/
          sudo chmod 777 /usr/share/doc/postgresql-doc-11 /usr/lib/postgresql/11/lib/ /usr/share/postgresql/11/extension/ /usr/lib/postgresql/11/lib/bitcode/
          sudo make && sudo make install
      - name: Start PostgreSQL
        run: |
          sudo systemctl start postgresql.service
          pg_isready
      - name: Install Python dependencies
        run: |
          pip install -U pip
          pip install pycodestyle codecov pytest
          python setup.py install
      - name: Decrypt BigQuery key
        run: |
          mkdir /opt/key/
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.GPG_PASSPHRASE_BIGQUERY_KEY }}" --output /opt/key/key.json src/unittest/utils/key/key.json.gpg
          export GOOGLE_APPLICATION_CREDENTIALS="/opt/key/key.json"